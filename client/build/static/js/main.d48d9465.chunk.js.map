{"version":3,"sources":["components/Logo.js","components/NavBar.js","components/NewPost.js","components/GoogleLogin.js","components/LoadingIcon.js","components/RenderWorkCard.js","config/functions.js","components/MyPosts.js","components/MainPage.js","components/EditPost.js","config/api_functions.js","config/url_config.js","App.js","index.js"],"names":["className","userIcon","openMenu","Logo","style","backgroundImage","backgroundPosition","backgroundSize","onClick","userId","NEW_POST_URL","require","method","action","htmlFor","type","id","name","required","min","max","value","to","LOGIN_REDIRECT_URL","href","hire_redirect","pet_name","service","price","created_by","setCurrentlyEditingPostData","_id","image_url","pet","background","target","addHttpsToUrl","url","newUrl","replace","concat","renderPetCards","arr","renderAll","map","renderCondition","RenderWorkCard","postsArray","length","LoadingIcon","currentlyEditingPostData","EDIT_POST_URL","useState","newRedirect","setNewRedirect","newImage","setNewImage","newPetName","setNewPetName","newService","setNewService","newPrice","setNewPrice","deleteButtonClass","setDeleteButtonClass","confirmDeleteClass","setConfirmDeleteClass","onChange","e","defaultValue","preventDefault","getLogInState","saveIsUserLogged","a","fetch","then","res","json","userInfo","getUserInfo","saveUserInfo","fetchWorkPosts","savePostsArray","posts","App","isUserLogged","setIsUserLogged","setUserInfo","setPostsArray","menuClass","setMenuClass","htmlElement","document","querySelector","LOGOUT_REDIRECT_URL","useEffect","includes","classList","add","remove","NavBar","imageUrl","googleId","path","element","MainPage","exact","NewPost","MyPosts","EditPost","GoogleLogin","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d48d9465.chunk.js","sourcesContent":["import { FaPaw } from 'react-icons/fa';\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<h1 className=\"logo_container\">\r\n\t\t\t<FaPaw />\r\n\t\t\t<span>Pet Work</span>\r\n\t\t</h1>\r\n\t);\r\n};\r\n","import Logo from './Logo';\r\n\r\nexport default ({ userIcon, openMenu }) => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<Logo />\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"user_icon\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundImage: `url(${userIcon})`,\r\n\t\t\t\t\tbackgroundPosition: 'center',\r\n\t\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={openMenu}\r\n\t\t\t></div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n","import { Link } from 'react-router-dom';\r\n// import { NEW_POST_URL } from '../config/url_config';\r\n\r\nexport default ({ userId }) => {\r\n\tconst { NODE_ENV } = process.env;\r\n\tconst envJson = require('../config/env_variables.json');\r\n\tconst node_env = NODE_ENV || 'development';\r\n\tconst env_variables = envJson[node_env];\r\n\tconst { NEW_POST_URL } = env_variables;\r\n\treturn (\r\n\t\t<div className=\"form_container\">\r\n\t\t\t<form className=\"new_work_form\" method=\"POST\" action={NEW_POST_URL}>\r\n\t\t\t\t<label htmlFor=\"pet_name\">Pet Name *</label>\r\n\t\t\t\t<input type=\"text\" id=\"pet_name\" name=\"pet_name\" required />\r\n\r\n\t\t\t\t<label htmlFor=\"pet_service\">Job *</label>\r\n\t\t\t\t<input type=\"text\" id=\"pet_service\" name=\"service\" required />\r\n\r\n\t\t\t\t<label htmlFor=\"pet_price\">Price *</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"pet_price\"\r\n\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\tmax=\"9999\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"image_url\">Selfie URL</label>\r\n\t\t\t\t<input type=\"text\" name=\"image_url\" id=\"image_url\" />\r\n\r\n\t\t\t\t<label htmlFor=\"hire_redirect\">Social Media URL</label>\r\n\t\t\t\t<input type=\"text\" name=\"hire_redirect\" id=\"hire_redirect\" />\r\n\r\n\t\t\t\t<input type=\"hidden\" value={userId} name=\"created_by\" />\r\n\r\n\t\t\t\t<button>Create Work</button>\r\n\t\t\t</form>\r\n\t\t\t<Link to=\"/\" className=\"go_back\">\r\n\t\t\t\tBack\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { FcGoogle } from 'react-icons/fc';\r\n// import { APP_URL, LOGIN_REDIRECT_URL } from '../config/url_config';\r\nimport Logo from './Logo';\r\n\r\nexport default () => {\r\n\tconst { NODE_ENV } = process.env;\r\n\tconst envJson = require('../config/env_variables.json');\r\n\tconst node_env = NODE_ENV || 'development';\r\n\tconst env_variables = envJson[node_env];\r\n\tconst { LOGIN_REDIRECT_URL } = env_variables;\r\n\treturn (\r\n\t\t<div className=\"google_component_container\">\r\n\t\t\t<div className=\"login_message\">\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<h2>Find work as a pet</h2>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<a href={`${LOGIN_REDIRECT_URL}`}>\r\n\t\t\t\t\t<FcGoogle id=\"FcGoogle\" /> Log in\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export default () => {\r\n\treturn (\r\n\t\t<div className=\"loading_icon_container\">\r\n\t\t\t<div className=\"loading_icon\"></div>\r\n\t\t\t<div className=\"loading_icon\"></div>\r\n\t\t\t<div className=\"loading_icon\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport default ({\r\n\thire_redirect,\r\n\tpet_name,\r\n\tservice,\r\n\tprice,\r\n\tcreated_by,\r\n\tsetCurrentlyEditingPostData,\r\n\t_id,\r\n\tuserId,\r\n\timage_url,\r\n\tpet,\r\n}) => {\r\n\tconst style = {\r\n\t\tbackground: `url(${image_url})`,\r\n\t\tbackgroundPosition: 'center',\r\n\t\tbackgroundSize: 'cover',\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"card\" key={pet_name}>\r\n\t\t\t<div className=\"pet_img\" style={style}></div>\r\n\t\t\t<div className=\"card_text\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tName <span>{pet_name}</span>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tService\r\n\t\t\t\t\t<span>{service}</span>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tPrice <span>{price}🦴</span>\r\n\t\t\t\t</h1>\r\n\t\t\t</div>\r\n\t\t\t{created_by === userId ? (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t// console.log(pet);\r\n\t\t\t\t\t\tsetCurrentlyEditingPostData(pet);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tto={`/edit/${_id}`}\r\n\t\t\t\t\tclassName=\"edit_btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t🖊️\r\n\t\t\t\t</Link>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t\t{created_by !== userId ? (\r\n\t\t\t\t<a href={`${hire_redirect}`} className=\"card_hire\" target=\"_blank\">\r\n\t\t\t\t\tHire!\r\n\t\t\t\t</a>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import RenderWorkCard from '../components/RenderWorkCard';\r\n\r\nexport const addHttpsToUrl = (url) => {\r\n\tlet newUrl = '';\r\n\tnewUrl = url.replace('https://', '');\r\n\tnewUrl = newUrl.replace('www.', '');\r\n\tnewUrl = 'https://www.'.concat(newUrl);\r\n\r\n\treturn newUrl;\r\n};\r\n\r\nexport const renderPetCards = (\r\n\tarr,\r\n\trenderAll = 'all',\r\n\tuserId,\r\n\tsetCurrentlyEditingPostData\r\n) => {\r\n\treturn arr.map((pet) => {\r\n\t\tlet {\r\n\t\t\thire_redirect,\r\n\t\t\timage_url,\r\n\t\t\tpet_name,\r\n\t\t\tservice,\r\n\t\t\tprice,\r\n\t\t\tcreated_by,\r\n\t\t\t_id,\r\n\t\t} = pet;\r\n\t\tconst renderCondition = renderAll === 'own' ? created_by === userId : true;\r\n\t\thire_redirect = addHttpsToUrl(hire_redirect);\r\n\t\t// console.log(hire_redirect);\r\n\r\n\t\tif (renderCondition) {\r\n\t\t\treturn (\r\n\t\t\t\t<RenderWorkCard\r\n\t\t\t\t\tkey={`${pet_name}${service}`}\r\n\t\t\t\t\tpet_name={pet_name}\r\n\t\t\t\t\timage_url={image_url}\r\n\t\t\t\t\tservice={service}\r\n\t\t\t\t\tprice={price}\r\n\t\t\t\t\tcreated_by={created_by}\r\n\t\t\t\t\thire_redirect={hire_redirect}\r\n\t\t\t\t\t_id={_id}\r\n\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\tpet={pet}\r\n\t\t\t\t\tsetCurrentlyEditingPostData={setCurrentlyEditingPostData}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n};\r\n","import LoadingIcon from './LoadingIcon';\r\nimport { Link } from 'react-router-dom';\r\nimport { renderPetCards } from '../config/functions';\r\nexport default ({ postsArray, userId, setCurrentlyEditingPostData }) => {\r\n\treturn (\r\n\t\t<div className=\"main_page_container\">\r\n\t\t\t{postsArray.length !== 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"main_page_content\">\r\n\t\t\t\t\t\t{renderPetCards(\r\n\t\t\t\t\t\t\tpostsArray,\r\n\t\t\t\t\t\t\t'own',\r\n\t\t\t\t\t\t\tuserId,\r\n\t\t\t\t\t\t\tsetCurrentlyEditingPostData\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Link to=\"/new\" className=\"add_service\">\r\n\t\t\t\t\t\tPost Work\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<LoadingIcon />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import LoadingIcon from './LoadingIcon';\r\nimport { Link } from 'react-router-dom';\r\nimport { renderPetCards } from '../config/functions';\r\nexport default ({ postsArray, userId, setCurrentlyEditingPostData }) => {\r\n\treturn (\r\n\t\t<div className=\"main_page_container\">\r\n\t\t\t{postsArray.length !== 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"main_page_content\">\r\n\t\t\t\t\t\t{renderPetCards(\r\n\t\t\t\t\t\t\tpostsArray,\r\n\t\t\t\t\t\t\t'all',\r\n\t\t\t\t\t\t\tuserId,\r\n\t\t\t\t\t\t\tsetCurrentlyEditingPostData\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Link to=\"/new\" className=\"add_service\">\r\n\t\t\t\t\t\tPost Work\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<LoadingIcon />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n// import { EDIT_POST_URL } from '../config/url_config';\r\n\r\nexport default ({ userId, currentlyEditingPostData }) => {\r\n\t//\r\n\tconst { NODE_ENV } = process.env;\r\n\tconst envJson = require('../config/env_variables.json');\r\n\tconst node_env = NODE_ENV || 'development';\r\n\tconst env_variables = envJson[node_env];\r\n\tconst { EDIT_POST_URL } = env_variables;\r\n\t//\r\n\tlet { hire_redirect, image_url, pet_name, service, price, _id } =\r\n\t\tcurrentlyEditingPostData;\r\n\tconst [newRedirect, setNewRedirect] = useState(hire_redirect);\r\n\tconst [newImage, setNewImage] = useState(image_url);\r\n\tconst [newPetName, setNewPetName] = useState(pet_name);\r\n\tconst [newService, setNewService] = useState(service);\r\n\tconst [newPrice, setNewPrice] = useState(price);\r\n\tconst [deleteButtonClass, setDeleteButtonClass] = useState('delete');\r\n\tconst [confirmDeleteClass, setConfirmDeleteClass] = useState('hidden');\r\n\r\n\treturn (\r\n\t\t<div className=\"form_container\">\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"new_work_form\"\r\n\t\t\t\tmethod=\"POST\"\r\n\t\t\t\taction={`${EDIT_POST_URL}${_id}?_method=PUT`}\r\n\t\t\t>\r\n\t\t\t\t<label htmlFor=\"pet_name\">Pet Name *</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"pet_name\"\r\n\t\t\t\t\tname=\"pet_name\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={newPetName}\r\n\t\t\t\t\tonChange={(e) => setNewPetName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"pet_service\">Service *</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"pet_service\"\r\n\t\t\t\t\tname=\"service\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={newService}\r\n\t\t\t\t\tonChange={(e) => setNewService(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"pet_price\">Price *</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"pet_price\"\r\n\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\tmax=\"9999\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={newPrice}\r\n\t\t\t\t\tonChange={(e) => setNewPrice(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"image_url\">Selfie URL</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"image_url\"\r\n\t\t\t\t\tid=\"image_url\"\r\n\t\t\t\t\tvalue={newImage}\r\n\t\t\t\t\tonChange={(e) => setNewImage(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"hire_redirect\">Social Media URL</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"hire_redirect\"\r\n\t\t\t\t\tid=\"hire_redirect\"\r\n\t\t\t\t\tvalue={newRedirect}\r\n\t\t\t\t\tonChange={(e) => setNewRedirect(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"hidden\" defaultValue={userId} name=\"created_by\" />\r\n\t\t\t\t<button>Edit Post</button>\r\n\t\t\t</form>\r\n\t\t\t<Link to=\"/\" className=\"go_back\">\r\n\t\t\t\tBack\r\n\t\t\t</Link>\r\n\t\t\t<form method=\"POST\" action={`${EDIT_POST_URL}${_id}?_method=DELETE`}>\r\n\t\t\t\t<div className=\"delete_container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={deleteButtonClass}\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tsetConfirmDeleteClass('confirm_delete');\r\n\t\t\t\t\t\t\tsetDeleteButtonClass('hidden');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className={confirmDeleteClass}>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetConfirmDeleteClass('hidden');\r\n\t\t\t\t\t\t\t\tsetDeleteButtonClass('delete');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\to\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button>x</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { LOGGED_STATE_URL, USER_INFO_URL, GET_POSTS_URL } from './url_config';\r\nexport const getLogInState = async (saveIsUserLogged) => {\r\n\tawait fetch(LOGGED_STATE_URL)\r\n\t\t.then((res) => res.json())\r\n\t\t.then((userInfo) => {\r\n\t\t\tsaveIsUserLogged(userInfo);\r\n\t\t\t// console.log(userInfo);\r\n\t\t});\r\n};\r\n\r\nexport const getUserInfo = async (saveUserInfo) => {\r\n\tawait fetch(USER_INFO_URL)\r\n\t\t.then((res) => res.json())\r\n\t\t.then((userInfo) => {\r\n\t\t\tsaveUserInfo(userInfo);\r\n\t\t\t// console.log(userInfo);\r\n\t\t});\r\n};\r\n\r\nexport const fetchWorkPosts = async (savePostsArray) => {\r\n\tawait fetch(GET_POSTS_URL)\r\n\t\t.then((res) => res.json())\r\n\t\t.then((posts) => {\r\n\t\t\tsavePostsArray(posts);\r\n\t\t\t// console.log(posts);\r\n\t\t});\r\n};\r\n","export const LOGIN_REDIRECT_URL = '/auth/google';\r\nexport const LOGGED_STATE_URL = '/api/loggedState';\r\nexport const USER_INFO_URL = '/api/userInfo';\r\nexport const GET_POSTS_URL = '/api/posts';\r\nexport const LOGOUT_REDIRECT_URL = '/api/logout';\r\nexport const NEW_POST_URL = '/api/new';\r\nexport const EDIT_POST_URL = '/api/edit/';\r\nexport const APP_URL = 'https://pet-work.herokuapp.com';\r\n","import { useState, useEffect } from 'react';\r\nimport styles from './styles/styles.css';\r\n// import { LOGOUT_REDIRECT_URL } from './config/url_config';\r\nimport NavBar from './components/NavBar';\r\nimport NewPost from './components/NewPost';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\nimport GoogleLogin from './components/GoogleLogin';\r\nimport MyPosts from './components/MyPosts';\r\nimport MainPage from './components/MainPage';\r\nimport EditPost from './components/EditPost';\r\nimport {\r\n\tgetLogInState,\r\n\tgetUserInfo,\r\n\tfetchWorkPosts,\r\n} from './config/api_functions';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [isUserLogged, setIsUserLogged] = useState(false);\r\n\tconst [userInfo, setUserInfo] = useState({});\r\n\tconst [currentlyEditingPostData, setCurrentlyEditingPostData] = useState({});\r\n\tconst [postsArray, setPostsArray] = useState([]);\r\n\tconst [menuClass, setMenuClass] = useState('app_menu hidden');\r\n\tvar htmlElement = document.querySelector('html');\r\n\t//\r\n\r\n\tconst { NODE_ENV } = process.env;\r\n\tconst envJson = require('./config/env_variables.json');\r\n\tconst node_env = NODE_ENV || 'development';\r\n\tconst env_variables = envJson[node_env];\r\n\tconst { LOGOUT_REDIRECT_URL } = env_variables;\r\n\t//\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLogInState(setIsUserLogged)\r\n\t\t\t.then(() => getUserInfo(setUserInfo))\r\n\t\t\t.then(() => fetchWorkPosts(setPostsArray));\r\n\t}, []);\r\n\r\n\tconst openMenu = () => {\r\n\t\tif (menuClass.includes('hidden')) {\r\n\t\t\tsetMenuClass('app_menu');\r\n\t\t\thtmlElement.classList.add('block_scroll');\r\n\t\t}\r\n\t\tif (!menuClass.includes('hidden')) {\r\n\t\t\tsetMenuClass('app_menu hidden');\r\n\t\t\thtmlElement.classList.remove('block_scroll');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"AppDiv\">\r\n\t\t\t{isUserLogged === true ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<NavBar userIcon={userInfo.imageUrl} openMenu={openMenu} />\r\n\t\t\t\t\t<div className={menuClass}>\r\n\t\t\t\t\t\t<Link to={`/myposts/${userInfo.googleId}`} onClick={openMenu}>\r\n\t\t\t\t\t\t\tMY POSTS\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={`/`} onClick={openMenu}>\r\n\t\t\t\t\t\t\tHOME\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<a href={LOGOUT_REDIRECT_URL}>LOGOUT</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t\t<MainPage\r\n\t\t\t\t\t\t\t\t\tpostsArray={postsArray}\r\n\t\t\t\t\t\t\t\t\tuserId={userInfo.googleId}\r\n\t\t\t\t\t\t\t\t\tsetCurrentlyEditingPostData={setCurrentlyEditingPostData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/new\"\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\telement={<NewPost userId={userInfo.googleId} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/myposts/:id\"\r\n\t\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t\t<MyPosts\r\n\t\t\t\t\t\t\t\t\tpostsArray={postsArray}\r\n\t\t\t\t\t\t\t\t\tuserId={userInfo.googleId}\r\n\t\t\t\t\t\t\t\t\tsetCurrentlyEditingPostData={setCurrentlyEditingPostData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/edit/:id\"\r\n\t\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t\t<EditPost\r\n\t\t\t\t\t\t\t\t\tuserId={userInfo.googleId}\r\n\t\t\t\t\t\t\t\t\tcurrentlyEditingPostData={currentlyEditingPostData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Routes>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<GoogleLogin />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}